/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
	// Apply the application plugin to add support for building a CLI application in Java.
	id 'application'
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation libs.junit.jupiter

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// This dependency is used by the application.
	implementation libs.guava

	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
	implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.13.3.202401111512-r'

	// https://mvnrepository.com/artifact/com.opencsv/opencsv
	implementation group: 'com.opencsv', name: 'opencsv', version: '5.9'

	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20240303'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-math3
	implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

	// implementation 'org.slf4j:slf4j-api:1.7.30'
	// implementation 'org.slf4j:slf4j-log4j12:1.7.30'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

application {
	// Define the main class for the application.
	mainClass = 'org.goodppy.Main'
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}
